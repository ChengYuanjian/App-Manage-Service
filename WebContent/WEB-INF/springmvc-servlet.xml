<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">

	<!-- 自动扫描 -->
	<context:component-scan
		base-package="com.cyj.controller,com.cyj.*.controller" />
	<!-- 自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter -->
	<mvc:annotation-driven />
	<!-- 把对静态资源的访问由HandlerMapping转到DefaultServletHttpRequestHandler处理
		<mvc:default-servlet-handler /> -->
	<mvc:resources mapping="/images/**" location="images/" />
	<mvc:resources mapping="/css/**" location="css/" />
	<mvc:resources mapping="/pages/*" location="pages/" />
	<mvc:resources mapping="/*.html" location="." />



	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 设置为true以忽略对Accept Header的支持-->
		<property name="ignoreAcceptHeader" value="true" />
		<!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
		<property name="defaultContentType" value="application/json" />

		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="html" value="text/html" />
				<entry key="jsp" value="text/html" />
			</map>
		</property>
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false" />
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="" />
					<property name="suffix" value=".html" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<!-- for application/xml -->
				<!-- 
					<bean class="org.springframework.web.servlet.view.xml.MarshallingView" >
					<property name="marshaller">
					<bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
					</property>
					</bean>
				-->
			</list>
		</property>
	</bean>

	<!--<mvc:interceptors>
		 定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 
		<bean class="com.cyj.base.interceptor.BaseInterceptor" />-->
		<!-- <mvc:interceptor>-->
		<!-- <mvc:mapping path="/user/**" />
			定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的
			<bean class="com.cyj.base.interceptor.BaseInterceptor"/>			
			</mvc:interceptor> 
	</mvc:interceptors>-->

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>

</beans>
