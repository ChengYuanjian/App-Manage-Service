<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.cyj" />

	<!-- 强制使用CGLIB代理  -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<context:property-placeholder location="classpath:jdbc.properties" />

	<!--<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
		</bean>-->

	<!-- DataSource数据源 
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.usr}" />
		<property name="password" value="${jdbc.pwd}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>-->
	<!-- Spring iBatis SqlMapClient 
	<bean id="sqlMapClient"
		class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation"
			value="classpath:SqlMapConfig.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath:com/cyj/**/SqlMapConfig*.ibatis.xml</value>
			</list>
		</property>
	</bean>-->


	<!--事务管理DataSourceTransactionManager
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>-->

	<!--启动spring注解功能
	<tx:annotation-driven transaction-manager="txManager" />

	<aop:config>
		<aop:pointcut id="baseServiceMethods"
			expression="execution(* com.cyj.dao.*.*(..))" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="baseServiceMethods" />
	</aop:config>

	<aop:aspectj-autoproxy />

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true"
				propagation="REQUIRED" />
			<tx:method name="find*" read-only="true"
				propagation="REQUIRED" />
				<tx:method name="get*" read-only="true"
				propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED"
				isolation="REPEATABLE_READ" />
			<tx:method name="update*" propagation="REQUIRED"
				isolation="REPEATABLE_READ" />
			<tx:method name="add*" propagation="REQUIRED"
				isolation="REPEATABLE_READ" />
			<tx:method name="delete*" propagation="REQUIRED"
				isolation="REPEATABLE_READ" />
		</tx:attributes>
	</tx:advice>-->
	
	<bean id="redisSynJob" class="com.cyj.job.RedisSynJob" />

    <!-- job的配置 -->
    <bean id="redisSynDetail"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="redisSynJob" />
        </property>
        <property name="targetMethod">
            <value>execute</value>
        </property>
    </bean>


    <!-- 调度的配置 -->
    <bean id="redisSynTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <ref bean="redisSynDetail" />
        </property>
        <property name="cronExpression">
            <value>10 * * * * ?</value>
        </property>
    </bean>


    <!-- 启动触发器的配置 -->
    <bean name="startQuertz" lazy-init="false" autowire="no"
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
               <!-- <ref bean="redisSynTrigger" /> --> 
            </list>
        </property>
    </bean>
</beans>
